{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  components: {},\n  data() {\n    return {\n      address: \"\",\n      addressAlias: \"\",\n      incoming: null,\n      outgoing: \"\",\n      dataAmount: 0,\n      outgoingAmount: 0\n    };\n  },\n  async created() {\n    // this.address = this.$route.params.addr;\n    console.log(this.$route.params.hash);\n    const payload1 = {\n      \"hash\": this.$route.params.hash\n    };\n    await axios.post('http://localhost:2011/txn/get-txn', payload1).then(response => {\n      this.incoming = response.data[0];\n      this.outgoing = response.data[1];\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"names":["axios","components","data","address","addressAlias","incoming","outgoing","dataAmount","outgoingAmount","created","console","log","$route","params","hash","payload1","post","then","response","catch","error"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/BTC/HashView.vue"],"sourcesContent":["<template>\n    <!-- <section>\n      <base-card>\n        <h3>Stats</h3>\n        <p><b>In/Out:</b> {{ dataAmount.toLocaleString() }} / {{ outgoingAmount.toLocaleString() }}</p>\n      </base-card>\n  \n      <top-vendors :address=\"address\" :totalOut=\"outgoingAmount\"></top-vendors>\n      <vip-customers :address=\"address\" :totalIn=\"dataAmount\"></vip-customers>\n    </section> -->\n\n    <section>\n        <div v-if=\"outgoing\">\n            <base-card>\n                <h3>Outgoing $Coins</h3>\n\n                <div v-for=\"output in outgoing\" :key=\"output.unique\">\n                    {{ output.txn_address }} - {{ output.txn_amount }}\n                </div>\n            </base-card>\n        </div>\n    </section>\n\n    <section>\n        <div v-if=\"incoming\">\n            <base-card>\n                <h3>Incoming $Coins</h3>\n\n                <div v-for=\"input in incoming\" :key=\"input.unique\">\n                    <router-link :to=\"/add\">\n                        {{ input.txn_address }}\n                    </router-link>\n\n                    - {{ input.alias }} - {{ input.txn_amount }}\n                </div>\n            </base-card>\n        </div>\n    </section>\n\n    <section />\n</template>\n  \n  \n<script>\n\nimport axios from \"axios\";\n\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            address: \"\",\n            addressAlias: \"\",\n            incoming: null,\n            outgoing: \"\",\n            dataAmount: 0,\n            outgoingAmount: 0,\n        };\n    },\n    async created() {\n        // this.address = this.$route.params.addr;\n        console.log(this.$route.params.hash);\n        const payload1 = {\n            \"hash\": this.$route.params.hash\n        }\n        await axios.post('http://localhost:2011/txn/get-txn', payload1)\n            .then((response) => {\n                this.incoming = response.data[0];\n                this.outgoing = response.data[1];\n                console.log(response);\n            })\n            .catch((error) => { console.log(error); });\n    }\n};\n</script>\n  \n  \n  \n<style scoped>\nh3 {\n    width: 100%;\n    height: 3rem;\n    background-color: #3d008d;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: rgb(227, 215, 215);\n}\n</style>\n  \n  \n  "],"mappings":"AA6CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC;MACbC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;IACpC,MAAMC,QAAO,GAAI;MACb,MAAM,EAAE,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC;IAC/B;IACA,MAAMd,KAAK,CAACgB,IAAI,CAAC,mCAAmC,EAAED,QAAQ,EACzDE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACb,QAAO,GAAIa,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC;MAChC,IAAI,CAACI,QAAO,GAAIY,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC;MAChCQ,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACzB,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;MAAEV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IAAE,CAAC,CAAC;EAClD;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
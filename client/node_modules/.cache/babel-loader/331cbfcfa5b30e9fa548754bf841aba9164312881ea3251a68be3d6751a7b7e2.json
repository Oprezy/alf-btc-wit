{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Top Vendors!\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_vendor_view = _resolveComponent(\"vendor-view\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_ctx.localAddress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.localAddress) + \" \", 1 /* TEXT */), _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.vendors, customer => {\n      return _openBlock(), _createBlock(_component_vendor_view, {\n        key: customer.txn_receiver,\n        address: customer.txn_receiver,\n        amount: customer.amount,\n        alias: customer.txn_receiverAlias,\n        count: customer.count,\n        owner: _ctx.address,\n        totalOut: _ctx.totalOut\n      }, null, 8 /* PROPS */, [\"address\", \"amount\", \"alias\", \"count\", \"owner\", \"totalOut\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_ctx","localAddress","_hoisted_1","_createVNode","_component_base_card","_hoisted_2","_Fragment","_renderList","vendors","customer","_createBlock","_component_vendor_view","key","txn_receiver","address","amount","alias","txn_receiverAlias","count","owner","totalOut"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Done/Projects/Scraper/client/src/components/tronOrg/TopVendors.vue"],"sourcesContent":["<template>\n  <section>\n    <div v-if=\"localAddress\">\n      {{ localAddress }}\n      <base-card>\n        <div>\n          <h3>Top Vendors!</h3>\n        </div>\n        <vendor-view v-for=\"customer in vendors\" :key=\"customer.txn_receiver\" :address=\"customer.txn_receiver\"\n          :amount=\"customer.amount\" :alias=\"customer.txn_receiverAlias\" :count=\"customer.count\" :owner=\"address\"\n          :totalOut=\"totalOut\">\n        </vendor-view>\n      </base-card>\n    </div>\n  </section>\n</template>\n  \n  \n  \n<script>\nimport axios from \"axios\";\nimport VendorView from \"../tronOrg/VendorView.vue\";\n\nexport default {\n  components: {\n    VendorView\n  },\n  props: [\"address\", \"totalOut\"],\n  data() {\n    return {\n      vendors: null,\n      localAddress: this.address\n    };\n  },\n  methods() { },\n  async created() {\n    \n  },\n  watch: {\n  address(newVal) {\n    this.localAddress = newVal;\n    console.log(this.localAddress);\n    const response = await axios.post(\"http://localhost:1007/txns/vip\", { \"address\": this.address });\n    const responseData = response.data;\n    console.log(responseData, \"hi\");\n    this.vendors = responseData;\n  }\n}\n\n};\n</script>"],"mappings":";;;;gCAKQA,mBAAA,CAEM,c,aADJA,mBAAA,CAAqB,YAAjB,cAAY,E;;;;;uBALxBC,mBAAA,CAaU,kBAZGC,IAAA,CAAAC,YAAY,I,cAAvBF,mBAAA,CAWM,OAAAG,UAAA,G,kCAVDF,IAAA,CAAAC,YAAY,IAAG,GAClB,iBAAAE,YAAA,CAQYC,oBAAA;sBAPV,MAEM,CAFNC,UAEM,G,kBACNN,mBAAA,CAGcO,SAAA,QAAAC,WAAA,CAHkBP,IAAA,CAAAQ,OAAO,EAAnBC,QAAQ;2BAA5BC,YAAA,CAGcC,sBAAA;QAH4BC,GAAG,EAAEH,QAAQ,CAACI,YAAY;QAAGC,OAAO,EAAEL,QAAQ,CAACI,YAAY;QAClGE,MAAM,EAAEN,QAAQ,CAACM,MAAM;QAAGC,KAAK,EAAEP,QAAQ,CAACQ,iBAAiB;QAAGC,KAAK,EAAET,QAAQ,CAACS,KAAK;QAAGC,KAAK,EAAEnB,IAAA,CAAAc,OAAO;QACpGM,QAAQ,EAAEpB,IAAA,CAAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
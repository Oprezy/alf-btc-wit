{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Watched Addresses\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.watchedAddresses, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.address\n      }, [_createVNode(_component_router_link, {\n        to: \"/all/{item.address\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.address) + \" - \" + _toDisplayString(item.count), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_base_card","_Fragment","_renderList","$data","watchedAddresses","item","key","address","_component_router_link","to","_toDisplayString","count"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/ComponentsRoutes/WatchedAddresses.vue"],"sourcesContent":["<template>\n  <section>\n    <h3>Watched Addresses</h3>\n    <base-card>\n      <div v-for=\"item in watchedAddresses\" :key=\"item.address\">\n        <router-link to=\"/all/{item.address\">\n            \n            {{ item.address }} - {{ item.count }}\n        </router-link>\n      </div>\n    </base-card>\n  </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n  data() {\n    return {\n      watchedAddresses: null,\n    };\n  },\n  async created() {\n    const response = await AuthenticationService.getWatchedAddresses();\n    this.watchedAddresses = response[\"data\"][\"watched\"];\n  },\n};\n</script>"],"mappings":";gCAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;;uBADvBC,mBAAA,CAUU,kBATRC,UAA0B,EAC1BC,YAAA,CAOYC,oBAAA;sBANL,MAAgC,E,kBAArCH,mBAAA,CAKMI,SAAA,QAAAC,WAAA,CALcC,KAAA,CAAAC,gBAAgB,EAAxBC,IAAI;2BAAhBR,mBAAA,CAKM;QALiCS,GAAG,EAAED,IAAI,CAACE;UAC/CR,YAAA,CAGcS,sBAAA;QAHDC,EAAE,EAAC;MAAoB;0BAEhC,MAAkB,C,kCAAfJ,IAAI,CAACE,OAAO,IAAG,KAAG,GAAAG,gBAAA,CAAGL,IAAI,CAACM,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
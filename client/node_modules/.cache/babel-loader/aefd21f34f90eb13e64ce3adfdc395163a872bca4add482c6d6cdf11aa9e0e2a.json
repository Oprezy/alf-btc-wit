{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [$props.alias == 'null' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.addressy) + \" (\" + _toDisplayString($props.count) + \") - \", 1 /* TEXT */), _createElementVNode(\"b\", null, _toDisplayString($props.amount), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(Math.floor($props.amount / $props.totalIn * 100)) + \"%\", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [_createTextVNode(_toDisplayString($props.alias) + \" (\" + _toDisplayString($props.count) + \") - \", 1 /* TEXT */), _createElementVNode(\"b\", null, _toDisplayString($props.amount), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(Math.floor($props.amount / $props.totalIn * 100)) + \"%\", 1 /* TEXT */)]))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_base_card","$props","alias","_hoisted_1","_ctx","addressy","_toDisplayString","count","_createElementVNode","amount","Math","floor","totalIn","_hoisted_2"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipView.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card>\n      <p v-if=\"alias == 'null'\">\n        {{ addressy }} ({{ count }}) - <b>{{ amount }}</b> \n        <i>{{ Math.floor((amount / totalIn) * 100) }}%</i>\n      </p>\n      <p v-else>\n        {{ alias }} ({{ count }}) - <b>{{ amount }}</b>\n        <i>{{ Math.floor((amount / totalIn) * 100) }}%</i>\n      </p>\n    </base-card>\n  </section>\n</template>\n\n\n<script>\n\nexport default {\n    data() {\n        return {\n            theOwner: null,\n        }\n    },\n  props: [\"address\", \"amount\", \"alias\", \"owner\", \"count\", \"totalIn\"],\n  async created() {\n    \n    \n  }\n};\n\n</script>"],"mappings":";;;;;;;;;uBACEA,mBAAA,CAWU,kBAVRC,YAAA,CASYC,oBAAA;sBARV,MAGI,CAHKC,MAAA,CAAAC,KAAK,c,cAAdJ,mBAAA,CAGI,KAAAK,UAAA,G,kCAFCC,IAAA,CAAAC,QAAQ,IAAG,IAAE,GAAAC,gBAAA,CAAGL,MAAA,CAAAM,KAAK,IAAG,MAAI,iBAAAC,mBAAA,CAAmB,WAAAF,gBAAA,CAAbL,MAAA,CAAAQ,MAAM,kBAC3CD,mBAAA,CAAkD,WAAAF,gBAAA,CAA5CI,IAAI,CAACC,KAAK,CAAEV,MAAA,CAAAQ,MAAM,GAAGR,MAAA,CAAAW,OAAO,WAAW,GAAC,gB,oBAEhDd,mBAAA,CAGI,KAAAe,UAAA,G,kCAFCZ,MAAA,CAAAC,KAAK,IAAG,IAAE,GAAAI,gBAAA,CAAGL,MAAA,CAAAM,KAAK,IAAG,MAAI,iBAAAC,mBAAA,CAAmB,WAAAF,gBAAA,CAAbL,MAAA,CAAAQ,MAAM,kBACxCD,mBAAA,CAAkD,WAAAF,gBAAA,CAA5CI,IAAI,CAACC,KAAK,CAAEV,MAAA,CAAAQ,MAAM,GAAGR,MAAA,CAAAW,OAAO,WAAW,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
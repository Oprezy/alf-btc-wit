{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"List of All addresses!\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allAddresses, address => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: address\n    }, [_createVNode(_component_base_card, null, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(address) + \" \", 1 /* TEXT */), _createVNode(_component_router_link, {\n        to: '/address/' + address\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"TronScan\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","allAddresses","address","key","_createVNode","_component_base_card","_component_router_link","to"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/AddressList.vue"],"sourcesContent":["<template>\n  <section>\n    <div><h2>List of All addresses!</h2></div>\n    <p v-for=\"address in allAddresses\" :key=\"address\">\n      <base-card>\n        {{ address }} <router-link :to=\"'/address/'+address\">TronScan</router-link></base-card\n      >\n    </p>\n  </section>\n</template>\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n  data() {\n    return {\n      allAddresses: null,\n    };\n  },\n  computed: {\n    build() {\n        return 'https://tronscan.org/#/address/transfers';\n    }\n  },\n  async created() {\n    const response = await AuthenticationService.fetchAllAddresses();\n    this.allAddresses = response[\"data\"][\"addresses\"];\n  },\n};\n</script>"],"mappings":";gCAEIA,mBAAA,CAA0C,c,aAArCA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;;;;uBADjCC,mBAAA,CAOU,kBANRC,UAA0C,G,kBAC1CD,mBAAA,CAIIE,SAAA,QAAAC,WAAA,CAJiBC,KAAA,CAAAC,YAAY,EAAvBC,OAAO;yBAAjBN,mBAAA,CAII;MAJgCO,GAAG,EAAED;IAAO,IAC9CE,YAAA,CAECC,oBAAA;wBADC,MAAa,C,kCAAVH,OAAO,IAAG,GAAC,iBAAAE,YAAA,CAA6DE,sBAAA;QAA/CC,EAAE,gBAAcL;;0BAAS,MAAQ,C,iBAAR,UAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import AuthenticationService from \"../../services/AuthenticationService\";\nimport VipView from \"../tronOrg/VipView.vue\";\nexport default {\n  components: {\n    VipView\n  },\n  props: [\"address\"],\n  data() {\n    return {\n      vipCustomers: null\n    };\n  },\n  methods() {},\n  async created() {\n    console.log(this.address, \"address\");\n    const payload = {\n      address: this.address\n    };\n    const response = await AuthenticationService.getVipCustomers(payload);\n    const result = response[\"data\"].customers;\n    const data = result.splice(0, 10);\n    // const data = this.vipCustomers;\n    data.sort((a, b) => {\n      const amountA = parseInt(a.amount);\n      const amountB = parseInt(b.amount);\n      return amountB - amountA;\n    });\n    // console.log(data);\n    this.vipCustomers = data;\n  }\n};","map":{"version":3,"names":["AuthenticationService","VipView","components","props","data","vipCustomers","methods","created","console","log","address","payload","response","getVipCustomers","result","customers","splice","sort","a","b","amountA","parseInt","amount","amountB"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipCustomers.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card>\n      <div><h3>List of VIP Customers!</h3></div>\n      <vip-view\n        v-for=\"customer in vipCustomers\"\n        :key=\"customer.address\"\n        :address=\"customer.address\"\n        :amount=\"customer.amount\"\n        :alias=\"customer.alias\"\n        :count=\"customer.count\"\n        owner=\"address\"\n      >\n      </vip-view>\n    </base-card>\n  </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport VipView from \"../tronOrg/VipView.vue\";\n\nexport default {\n    components: {\n        VipView\n    },\n  props: [\"address\"],\n  data() {\n    return {\n      vipCustomers: null,\n    };\n  },\n  methods() {},\n  async created() {\n    console.log(this.address, \"address\");\n    const payload = {\n      address: this.address,\n    };\n    const response = await AuthenticationService.getVipCustomers(payload);\n    const result = response[\"data\"].customers;\n    const data = result.splice(0,10)\n    // const data = this.vipCustomers;\n    data.sort((a, b) => {\n      const amountA = parseInt(a.amount);\n      const amountB = parseInt(b.amount);\n\n      return amountB - amountA;\n    });\n    // console.log(data);\n    this.vipCustomers = data;\n  },\n};\n</script>"],"mappings":"AAqBA,OAAOA,qBAAoB,MAAO,sCAAsC;AACxE,OAAOC,OAAM,MAAO,wBAAwB;AAE5C,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EACHE,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ,MAAMC,OAAOA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;IACpC,MAAMC,OAAM,GAAI;MACdD,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC;IACD,MAAME,QAAO,GAAI,MAAMZ,qBAAqB,CAACa,eAAe,CAACF,OAAO,CAAC;IACrE,MAAMG,MAAK,GAAIF,QAAQ,CAAC,MAAM,CAAC,CAACG,SAAS;IACzC,MAAMX,IAAG,GAAIU,MAAM,CAACE,MAAM,CAAC,CAAC,EAAC,EAAE;IAC/B;IACAZ,IAAI,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAClB,MAAMC,OAAM,GAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;MAClC,MAAMC,OAAM,GAAIF,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC;MAElC,OAAOC,OAAM,GAAIH,OAAO;IAC1B,CAAC,CAAC;IACF;IACA,IAAI,CAACf,YAAW,GAAID,IAAI;EAC1B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
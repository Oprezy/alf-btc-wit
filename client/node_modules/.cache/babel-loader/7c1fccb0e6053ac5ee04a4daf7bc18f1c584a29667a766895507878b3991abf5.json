{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Watched Addresses\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.watchedAddresses, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.address\n      }, \" router \" + _toDisplayString(item.address) + \" - \" + _toDisplayString(item.count), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_base_card","_Fragment","_renderList","$data","watchedAddresses","item","key","address","_toDisplayString","count"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/ComponentsRoutes/WatchedAddresses.vue"],"sourcesContent":["<template>\n  <section>\n    <h3>Watched Addresses</h3>\n    <base-card>\n      <div v-for=\"item in watchedAddresses\" :key=\"item.address\">\n        router\n        {{ item.address }} - {{ item.count }}\n      </div>\n    </base-card>\n  </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n  data() {\n    return {\n      watchedAddresses: null,\n    };\n  },\n  async created() {\n    const response = await AuthenticationService.getWatchedAddresses();\n    this.watchedAddresses = response[\"data\"][\"watched\"];\n  },\n};\n</script>"],"mappings":";gCAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;;;;uBADvBC,mBAAA,CAQU,kBAPRC,UAA0B,EAC1BC,YAAA,CAKYC,oBAAA;sBAJL,MAAgC,E,kBAArCH,mBAAA,CAGMI,SAAA,QAAAC,WAAA,CAHcC,KAAA,CAAAC,gBAAgB,EAAxBC,IAAI;2BAAhBR,mBAAA,CAGM;QAHiCS,GAAG,EAAED,IAAI,CAACE;SAAS,UAExD,GAAAC,gBAAA,CAAGH,IAAI,CAACE,OAAO,IAAG,KAAG,GAAAC,gBAAA,CAAGH,IAAI,CAACI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  saveAddress(context, payload) {\n    context.commit(\"saveAddress\", payload);\n  },\n  saveAddresses(context, payload) {\n    context.commit(\"saveAddresses\", payload);\n  },\n  async getStats(state) {\n    const current = new Date().getTime();\n    const aDay = 24 * 60 * 60 * 1000;\n    const aMonth = aDay * 30;\n\n    // old data - start_timestamp=1680043160&end_timestamp=1688643217\n\n    const address = state.getters[\"getAddress\"];\n    const link = `https://apilist.tronscanapi.com/api/transfer/trc20?address=${address}&trc20Id=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t&start=48&limit=50&direction=0&reverse=true&db_version=1&start_timestamp=${aMonth}&end_timestamp=1688643217`;\n    const response = await (await fetch(link)).json();\n    const transactions = response[\"data\"];\n    const refinedTranactions = [];\n    for (let i = 0; i < transactions.length; i++) {\n      const hash = transactions[i].hash;\n      const to = transactions[i].to;\n      const from = transactions[i].from;\n      const amount = transactions[i].amount * 0.000001;\n      const rawTime = new Date(transactions[i].block_timestamp);\n      const time = rawTime.toLocaleString();\n      if (amount < 10) {\n        console.log(\"small one\");\n      } else {\n        const transaction = {\n          from: from,\n          to: to,\n          amount: amount,\n          time: time,\n          hash: hash\n        };\n        refinedTranactions.push(transaction);\n      }\n    }\n    console.log(refinedTranactions);\n    return refinedTranactions;\n    // context.commit(\"saveData\", refinedTranactions);\n    // console.log(context.commit);\n  }\n};\n\n// TYWyTnSG7fVQtxL1NDyiLTeUpPUzhMWFfA","map":{"version":3,"names":["saveAddress","context","payload","commit","saveAddresses","getStats","state","current","Date","getTime","aDay","aMonth","address","getters","link","response","fetch","json","transactions","refinedTranactions","i","length","hash","to","from","amount","rawTime","block_timestamp","time","toLocaleString","console","log","transaction","push"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/stores/primaryStats/actions.js"],"sourcesContent":["export default {\n  saveAddress(context, payload) {\n    context.commit(\"saveAddress\", payload);\n  },\n  saveAddresses(context, payload) {\n    context.commit(\"saveAddresses\", payload);\n  },\n  async getStats(state) {\n    const current = new Date().getTime();\n\n    const aDay = 24 * 60 * 60 * 1000;\n    const aMonth = aDay * 30;\n\n\n    // old data - start_timestamp=1680043160&end_timestamp=1688643217\n\n    const address = state.getters[\"getAddress\"];\n    const link = `https://apilist.tronscanapi.com/api/transfer/trc20?address=${address}&trc20Id=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t&start=48&limit=50&direction=0&reverse=true&db_version=1&start_timestamp=${aMonth}&end_timestamp=1688643217`;\n    const response = await (await fetch(link)).json();\n    const transactions = response[\"data\"];\n    const refinedTranactions = [];\n\n    for (let i = 0; i < transactions.length; i++) {\n      const hash = transactions[i].hash;\n      const to = transactions[i].to;\n      const from = transactions[i].from;\n      const amount = transactions[i].amount * 0.000001;\n      const rawTime = new Date(transactions[i].block_timestamp);\n      const time = rawTime.toLocaleString();\n\n      if (amount < 10) {\n        console.log(\"small one\");\n      } else {\n        const transaction = {\n          from: from,\n          to: to,\n          amount: amount,\n          time: time,\n          hash: hash,\n        };\n        refinedTranactions.push(transaction);\n      }\n    }\n    console.log(refinedTranactions);\n    return refinedTranactions;\n    // context.commit(\"saveData\", refinedTranactions);\n    // console.log(context.commit);\n  },\n};\n\n// TYWyTnSG7fVQtxL1NDyiLTeUpPUzhMWFfA\n"],"mappings":";AAAA,eAAe;EACbA,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC5BD,OAAO,CAACE,MAAM,CAAC,aAAa,EAAED,OAAO,CAAC;EACxC,CAAC;EACDE,aAAaA,CAACH,OAAO,EAAEC,OAAO,EAAE;IAC9BD,OAAO,CAACE,MAAM,CAAC,eAAe,EAAED,OAAO,CAAC;EAC1C,CAAC;EACD,MAAMG,QAAQA,CAACC,KAAK,EAAE;IACpB,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAEpC,MAAMC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;IAChC,MAAMC,MAAM,GAAGD,IAAI,GAAG,EAAE;;IAGxB;;IAEA,MAAME,OAAO,GAAGN,KAAK,CAACO,OAAO,CAAC,YAAY,CAAC;IAC3C,MAAMC,IAAI,GAAI,8DAA6DF,OAAQ,uHAAsHD,MAAO,2BAA0B;IAC1O,MAAMI,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,CAAC,CAAC;IACjD,MAAMC,YAAY,GAAGH,QAAQ,CAAC,MAAM,CAAC;IACrC,MAAMI,kBAAkB,GAAG,EAAE;IAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,YAAY,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,MAAME,IAAI,GAAGJ,YAAY,CAACE,CAAC,CAAC,CAACE,IAAI;MACjC,MAAMC,EAAE,GAAGL,YAAY,CAACE,CAAC,CAAC,CAACG,EAAE;MAC7B,MAAMC,IAAI,GAAGN,YAAY,CAACE,CAAC,CAAC,CAACI,IAAI;MACjC,MAAMC,MAAM,GAAGP,YAAY,CAACE,CAAC,CAAC,CAACK,MAAM,GAAG,QAAQ;MAChD,MAAMC,OAAO,GAAG,IAAIlB,IAAI,CAACU,YAAY,CAACE,CAAC,CAAC,CAACO,eAAe,CAAC;MACzD,MAAMC,IAAI,GAAGF,OAAO,CAACG,cAAc,CAAC,CAAC;MAErC,IAAIJ,MAAM,GAAG,EAAE,EAAE;QACfK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC1B,CAAC,MAAM;QACL,MAAMC,WAAW,GAAG;UAClBR,IAAI,EAAEA,IAAI;UACVD,EAAE,EAAEA,EAAE;UACNE,MAAM,EAAEA,MAAM;UACdG,IAAI,EAAEA,IAAI;UACVN,IAAI,EAAEA;QACR,CAAC;QACDH,kBAAkB,CAACc,IAAI,CAACD,WAAW,CAAC;MACtC;IACF;IACAF,OAAO,CAACC,GAAG,CAACZ,kBAAkB,CAAC;IAC/B,OAAOA,kBAAkB;IACzB;IACA;EACF;AACF,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}
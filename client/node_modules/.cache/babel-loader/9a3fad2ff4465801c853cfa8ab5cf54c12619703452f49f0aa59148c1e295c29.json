{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"List of All addresses!\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_router_view), _createElementVNode(\"section\", null, [_hoisted_1, _createElementVNode(\"div\", null, _toDisplayString($data.allAddresses), 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: \"google\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"OK\")]),\n    _: 1 /* STABLE */\n  })])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_router_view","_hoisted_1","_toDisplayString","$data","allAddresses","_component_router_link","to"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/AddressList.vue"],"sourcesContent":["<template>\n    <router-view></router-view>\n    <section>\n        <div><h2>List of All addresses!</h2></div>\n        <div>{{ allAddresses }}</div>\n        \n        <router-link to=\"google\">OK</router-link>\n    </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n    data() {\n        return {\n            allAddresses: null\n        }\n    },\n    async created() {\n        const response = await AuthenticationService.fetchAllAddresses();\n        this.allAddresses = response['data']['addresses'];\n    },\n}\n</script>"],"mappings":";gCAGQA,mBAAA,CAA0C,c,aAArCA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;;;;6DAFnCC,YAAA,CAA2BC,sBAAA,GAC3BF,mBAAA,CAKU,kBAJNG,UAA0C,EAC1CH,mBAAA,CAA6B,aAAAI,gBAAA,CAArBC,KAAA,CAAAC,YAAY,kBAEpBL,YAAA,CAAyCM,sBAAA;IAA5BC,EAAE,EAAC;EAAQ;sBAAC,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}
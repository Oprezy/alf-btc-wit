{"ast":null,"code":"import Api from './Api';\nexport default {\n  getAddressOwner(credentials) {\n    console.log(\"credentials\", credentials);\n    return Api().get('getaddress', credentials);\n  },\n  saveAddr(credentials) {\n    return Api().post('saveAddress', credentials);\n  },\n  fetchAllAddresses() {\n    return Api().get('addresses');\n  },\n  setOwner(address, owner) {\n    return Api().put('setowner', address, owner);\n  }\n  // getAddressOwner(credentials) {\n  //     console.log(\"credentials\", credentials);\n  //     return Api().get('getaddress', credentials)\n  // },\n};","map":{"version":3,"names":["Api","getAddressOwner","credentials","console","log","get","saveAddr","post","fetchAllAddresses","setOwner","address","owner","put"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/services/AuthenticationService.js"],"sourcesContent":["import Api from './Api';\n\nexport default {\n    getAddressOwner(credentials) {\n        console.log(\"credentials\", credentials);\n        return Api().get('getaddress', credentials)\n    },\n    saveAddr(credentials) {\n        return Api().post('saveAddress', credentials)\n    },\n    fetchAllAddresses() {\n        return Api().get('addresses')\n    },\n    setOwner(address, owner) {\n        return Api().put('setowner', address, owner)\n    },\n    // getAddressOwner(credentials) {\n    //     console.log(\"credentials\", credentials);\n    //     return Api().get('getaddress', credentials)\n    // },\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,eAAe;EACXC,eAAeA,CAACC,WAAW,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,WAAW,CAAC;IACvC,OAAOF,GAAG,CAAC,CAAC,CAACK,GAAG,CAAC,YAAY,EAAEH,WAAW,CAAC;EAC/C,CAAC;EACDI,QAAQA,CAACJ,WAAW,EAAE;IAClB,OAAOF,GAAG,CAAC,CAAC,CAACO,IAAI,CAAC,aAAa,EAAEL,WAAW,CAAC;EACjD,CAAC;EACDM,iBAAiBA,CAAA,EAAG;IAChB,OAAOR,GAAG,CAAC,CAAC,CAACK,GAAG,CAAC,WAAW,CAAC;EACjC,CAAC;EACDI,QAAQA,CAACC,OAAO,EAAEC,KAAK,EAAE;IACrB,OAAOX,GAAG,CAAC,CAAC,CAACY,GAAG,CAAC,UAAU,EAAEF,OAAO,EAAEC,KAAK,CAAC;EAChD;EACA;EACA;EACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
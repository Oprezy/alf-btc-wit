{"ast":null,"code":"import axios from \"axios\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nexport default {\n  data() {\n    return {\n      allAddresses: null\n    };\n  },\n  computed: {\n    build() {\n      return \"https://tronscan.org/#/address/transfers\";\n    }\n  },\n  async created() {\n    const resp = await axios.get();\n    const response = await AuthenticationService.fetchAllAddresses();\n    this.allAddresses = response[\"data\"][\"addresses\"];\n    await this.$store.dispatch(\"stats/saveAllAddresses\", {\n      ok: this.allAddresses\n    });\n  }\n};","map":{"version":3,"names":["axios","AuthenticationService","data","allAddresses","computed","build","created","resp","get","response","fetchAllAddresses","$store","dispatch","ok"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Done/Projects/Scraper/client/src/components/tronOrg/AddressList.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card>\n      <div><h3>List of All addresses!</h3></div>\n      <p v-for=\"address in allAddresses\" :key=\"address\">\n        <base-card>\n          <router-link :to=\"'/all/' + address['single']\">\n            <p v-if=\"address['owner']\">\n              <b>{{ address[\"owner\"] }}</b>\n            </p>\n            <p v-else>\n              {{ address[\"single\"] }}\n            </p>\n          </router-link>\n          <router-link :address=\"address\" :to=\"'/setowner/' + address.single\">\n            . (S.O)</router-link\n          >\n        </base-card>\n      </p>\n    </base-card>\n  </section>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n\nexport default {\n  data() {\n    return {\n      allAddresses: null,\n    };\n  },\n  computed: {\n    build() {\n      return \"https://tronscan.org/#/address/transfers\";\n    },\n  },\n  async created() {\n    const resp = await axios.get()\n\n    const response = await AuthenticationService.fetchAllAddresses();\n    this.allAddresses = response[\"data\"][\"addresses\"];\n\n    await this.$store.dispatch(\"stats/saveAllAddresses\", {\n      ok: this.allAddresses,\n    });\n  },\n};\n</script>\n\n\n<style>\nh3 {\n  width: 100%;\n  height: 3rem;\n  background-color: #3d008d;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(229, 223, 223);\n}\n</style>\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,qBAAoB,MAAO,sCAAsC;AAGxE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,OAAO,0CAA0C;IACnD;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAG,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC;IAE7B,MAAMC,QAAO,GAAI,MAAMR,qBAAqB,CAACS,iBAAiB,CAAC,CAAC;IAChE,IAAI,CAACP,YAAW,GAAIM,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;IAEjD,MAAM,IAAI,CAACE,MAAM,CAACC,QAAQ,CAAC,wBAAwB,EAAE;MACnDC,EAAE,EAAE,IAAI,CAACV;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
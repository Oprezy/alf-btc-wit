{"ast":null,"code":"import TransactionList from \"../tronOrg/TransactionList.vue\";\nexport default {\n  components: {\n    TransactionList\n  },\n  data() {\n    return {\n      address: \"\",\n      data: null,\n      outgoing: \"\"\n    };\n  },\n  async created() {\n    this.address = this.$route.params.addr;\n    this.$store.dispatch(\"stats/saveAddress\", this.address);\n    const temp = await this.$store.dispatch(\"stats/getStats\");\n    this.$store.commit(\"stats/saveData\", temp);\n    console.log(\"ok\");\n    this.$store.getters[\"stats/getAddressData\"][0];\n    this.data = this.outgoing = console.log(this.data);\n  }\n};","map":{"version":3,"names":["TransactionList","components","data","address","outgoing","created","$route","params","addr","$store","dispatch","temp","commit","console","log","getters"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/ComponentsRoutes/AddressView.vue"],"sourcesContent":["<template>\n  <section>\n    <h3>Details: {{ address }}</h3>\n  </section>\n\n  <section>\n    <div v-if=\"data\">\n      <base-card>\n        <transaction-list\n          v-for=\"transaction in data\"\n          :key=\"transaction.hash\"\n          :from=\"transaction.from\"\n          :to=\"transaction.to\"\n          :amount=\"transaction.amount\"\n          :hash=\"transaction.hash\"\n          :time=\"transaction.time\"\n        ></transaction-list>\n      </base-card>\n    </div>\n  </section>\n\n  <section />\n</template>\n\n\n<script>\nimport TransactionList from \"../tronOrg/TransactionList.vue\";\n\nexport default {\n  components: {\n    TransactionList,\n  },\n  data() {\n    return {\n      address: \"\",\n      data: null,\n      outgoing: \"\",\n    };\n  },\n  async created() {\n    this.address = this.$route.params.addr;\n\n    this.$store.dispatch(\"stats/saveAddress\", this.address);\n    const temp = await this.$store.dispatch(\"stats/getStats\");\n    this.$store.commit(\"stats/saveData\", temp);\n    console.log(\"ok\");\n    this.$store.getters[\"stats/getAddressData\"][0];\n    this.data = \n    this.outgoing = \n    console.log(this.data);\n    \n  },\n};\n</script>\n\n\n\n<!-- data() {\n    return {\n      address: \"\",\n      data: null,\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$store.dispatch(\"stats/saveAddress\", this.address);\n      const temp = await this.$store.dispatch(\"stats/getStats\");\n      this.$store.commit(\"stats/saveData\", temp);\n      console.log(\"ok\");\n      this.data = this.$store.getters[\"stats/getAddressData\"];\n    }, -->"],"mappings":"AA0BA,OAAOA,eAAc,MAAO,gCAAgC;AAE5D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXD,IAAI,EAAE,IAAI;MACVE,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACF,OAAM,GAAI,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,IAAI;IAEtC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAACP,OAAO,CAAC;IACvD,MAAMQ,IAAG,GAAI,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC;IACzD,IAAI,CAACD,MAAM,CAACG,MAAM,CAAC,gBAAgB,EAAED,IAAI,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACb,IAAG,GACR,IAAI,CAACE,QAAO,GACZS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,IAAI,CAAC;EAExB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import AuthenticationService from \"../../services/AuthenticationService\";\nimport localApiClient from \"../../services/Api\";\nexport default {\n  data() {\n    return {\n      exchangeName: \"\",\n      address: \"\",\n      url: \"\"\n    };\n  },\n  methods: {\n    async registerAddress() {\n      if (this.isChecked) {\n        this.editAddress();\n      } else {\n        const payload = {\n          \"name\": this.exchangeName,\n          \"url\": this.url,\n          \"address\": this.address\n        };\n        console.log(payload);\n        await localApiClient.post(\"http://localhost:2011/exchange/\", payload);\n        this.$router.push(`/exchange`);\n      }\n    }\n  },\n  watch: {\n    //   selectedOption() {\n    //     console.log(this.selectedOption);\n    //   },\n  },\n  async created() {\n    //   const allCategories = await axios.get(\"http://localhost:1007/category/\");\n    //   console.log(allCategories.data);\n    //   const rawData = allCategories.data;\n\n    //   const getOptions = rawData.map((item) => {\n    //     return { \"label\": item.name, \"value\": item.id }\n    //   })\n    //   this.selectedOption = getOptions[0].value;\n    //   this.options = getOptions;\n  }\n};","map":{"version":3,"names":["localApiClient","data","exchangeName","address","url","methods","registerAddress","isChecked","editAddress","payload","console","log","post","$router","push","watch","created"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/BTC/RegisterExchange.vue"],"sourcesContent":["<template>\n    <!-- <router-view></router-view> -->\n    <section>\n        <div>\n        </div>\n\n        <form @submit.prevent=\"registerAddress\">\n            <div class=\"form-control\">\n                <label for=\"address\">Exchange Name</label>\n                <input type=\"text\" name=\"address\" v-model=\"exchangeName\" />\n                <label for=\"address\">Address</label>\n                <input type=\"text\" name=\"address\" v-model=\"address\" />\n                <label for=\"address\">Link</label>\n                <input type=\"text\" name=\"owner\" v-model=\"url\" />\n            </div>\n            <br />\n\n\n            <div>\n                <button>Save address</button>\n            </div>\n        </form>\n        <div>\n            <!-- <button @click=\"check\">check</button> -->\n            {{ address }}\n            {{ name }}\n        </div>\n    </section>\n</template>\n  \n  \n<script>\n// import AuthenticationService from \"../../services/AuthenticationService\";\nimport localApiClient from \"../../services/Api\";\n\nexport default {\n    data() {\n        return {\n            exchangeName: \"\",\n            address: \"\",\n            url: \"\"\n        };\n    },\n    methods: {\n        async registerAddress() {\n            if (this.isChecked) {\n                this.editAddress();\n            } else {\n                const payload = {\n                    \"name\": this.exchangeName,\n                    \"url\": this.url,\n                    \"address\": this.address\n                };\n                console.log(payload);\n                await localApiClient.post(\"http://localhost:2011/exchange/\", payload);\n                this.$router.push(`/exchange`);\n            }\n        },\n    },\n    watch: {\n        //   selectedOption() {\n        //     console.log(this.selectedOption);\n        //   },\n    },\n    async created() {\n        //   const allCategories = await axios.get(\"http://localhost:1007/category/\");\n        //   console.log(allCategories.data);\n        //   const rawData = allCategories.data;\n\n        //   const getOptions = rawData.map((item) => {\n        //     return { \"label\": item.name, \"value\": item.id }\n        //   })\n        //   this.selectedOption = getOptions[0].value;\n        //   this.options = getOptions;\n    }\n};\n</script>\n  \n  \n  \n<style scoped>\nform {\n    margin: 1rem;\n    border: 1px solid #ccc;\n    border-radius: 12px;\n    padding: 1rem;\n}\n\n.form-control {\n    margin: 0.5rem 0;\n}\n\nlabel {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    display: block;\n}\n\ninput,\ntextarea {\n    display: block;\n    width: 100%;\n    font: inherit;\n    border: 1px solid #ccc;\n    padding: 0.15rem;\n}\n\ninput:focus,\ntextarea:focus {\n    border-color: #3d008d;\n    background-color: #faf6ff;\n    outline: none;\n}\n\n.errors {\n    font-weight: bold;\n    color: red;\n}\n\n.actions {\n    text-align: center;\n}\n</style>\n  \n  \n  // this.$store.commit(\"fire/saveAddress\", this.address);\n  // this.$store.dispatch(\"fire/fireAddress\");\n  // // this.$store.dispatch('forwardAddress');"],"mappings":";AAgCA;AACA,OAAOA,cAAa,MAAO,oBAAoB;AAE/C,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,eAAeA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACC,SAAS,EAAE;QAChB,IAAI,CAACC,WAAW,CAAC,CAAC;MACtB,OAAO;QACH,MAAMC,OAAM,GAAI;UACZ,MAAM,EAAE,IAAI,CAACP,YAAY;UACzB,KAAK,EAAE,IAAI,CAACE,GAAG;UACf,SAAS,EAAE,IAAI,CAACD;QACpB,CAAC;QACDO,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;QACpB,MAAMT,cAAc,CAACY,IAAI,CAAC,iCAAiC,EAAEH,OAAO,CAAC;QACrE,IAAI,CAACI,OAAO,CAACC,IAAI,CAAE,WAAU,CAAC;MAClC;IACJ;EACJ,CAAC;EACDC,KAAK,EAAE;IACH;IACA;IACA;EAAA,CACH;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EAAA;AAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [$props.alias ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($props.alias), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_base_card","$props","alias","_hoisted_1","_toDisplayString","_hoisted_2"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipView.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card> \n<p v-if=\"alias\">{{ alias }}</p>\n<p v-else></p></base-card>\n  </section>\n</template>\n\n\n<script>\nexport default {\n  props: [\"address\", \"amount\", \"alias\", 'owner'],\n};\n</script>"],"mappings":";;;;;;;;;uBACEA,mBAAA,CAIU,kBAHRC,YAAA,CAEsBC,oBAAA;sBAD1B,MAA+B,CAAtBC,MAAA,CAAAC,KAAK,I,cAAdJ,mBAAA,CAA+B,KAAAK,UAAA,EAAAC,gBAAA,CAAZH,MAAA,CAAAC,KAAK,qB,cACxBJ,mBAAA,CAAc,KAAAO,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"//   import TransactionList from \"../tronOrg/TransactionList.vue\";\n//   import VipCustomers from \"../tronOrg/VipCustomers.vue\";\n//   import TopVendors from \"../tronOrg/TopVendors.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    TransactionList,\n    VipCustomers,\n    TopVendors\n  },\n  data() {\n    return {\n      address: \"\",\n      addressAlias: \"\",\n      incoming: null,\n      outgoing: \"\",\n      dataAmount: 0,\n      outgoingAmount: 0\n    };\n  },\n  async created() {\n    // this.address = this.$route.params.addr;\n    console.log(this.$route.params.hash);\n    const payload1 = {\n      \"hash\": this.$route.params.hash\n    };\n    await axios.post('http://localhost:2011/txn/get-txn', payload1).then(response => {\n      this.incoming = response.data[0];\n      this.outgoing = response.data[1];\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    for (let i = 0; i < this.incoming.length; i++) {\n      this.dataAmount += this.incoming[i].amount;\n    }\n    for (let i = 0; i < this.outgoing.length; i++) {\n      this.outgoingAmount += this.outgoing[i].amount;\n    }\n    const ii = this.incoming[1];\n    this.addressAlias = ii.receiverAlias || 'null';\n  }\n};","map":{"version":3,"names":["axios","components","TransactionList","VipCustomers","TopVendors","data","address","addressAlias","incoming","outgoing","dataAmount","outgoingAmount","created","console","log","$route","params","hash","payload1","post","then","response","catch","error","i","length","amount","ii","receiverAlias"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/BTC/HashView.vue"],"sourcesContent":["<template>\n    <h4 v-if=\"addressAlias\"><router-link :to=\"'/register/' + address\"> {{ addressAlias }} </router-link> -- {{ address }} --\n      <a :href=\"'https://tronscan.org/#/address/' + address + '/transactions'\">TScan</a>\n    </h4>\n    <h3 v-else> <router-link :to=\"'/register/' + address\">{{ address }}</router-link></h3>\n  \n  \n  \n    <section>\n      <base-card>\n        <h3>Stats</h3>\n        <p><b>In/Out:</b> {{ dataAmount.toLocaleString() }} / {{ outgoingAmount.toLocaleString() }}</p>\n      </base-card>\n  \n      <top-vendors :address=\"address\" :totalOut=\"outgoingAmount\"></top-vendors>\n      <vip-customers :address=\"address\" :totalIn=\"dataAmount\"></vip-customers>\n    </section>\n  \n    <section>\n      <div v-if=\"outgoing\">\n        <base-card>\n          <h3>Outgoing $Coins</h3>\n          <transaction-list v-for=\"transaction in outgoing\" :key=\"transaction.uniqueFactor\" :from=\"transaction.from\"\n            :to=\"transaction.to\" :amount=\"transaction.amount\" :hash=\"transaction.hash\" :time=\"transaction.time\"\n            :toAlias=\"transaction.receiverAlias\" :fromAlias=\"transaction.senderAlias\"></transaction-list>\n        </base-card>\n      </div>\n    </section>\n  \n    <section>\n      <div v-if=\"incoming\">\n        <base-card>\n          <h3>Incoming $Coins</h3>\n          <transaction-list v-for=\"transaction in incoming\" :key=\"transaction.uniqueFactor\" :from=\"transaction.from\"\n            :to=\"transaction.to\" :amount=\"transaction.amount\" :hash=\"transaction.hash\" :time=\"transaction.time\"\n            :toAlias=\"transaction.receiverAlias\" :fromAlias=\"transaction.senderAlias\"></transaction-list>\n        </base-card>\n      </div>\n    </section>\n  \n    <section />\n  </template>\n  \n  \n  <script>\n//   import TransactionList from \"../tronOrg/TransactionList.vue\";\n//   import VipCustomers from \"../tronOrg/VipCustomers.vue\";\n//   import TopVendors from \"../tronOrg/TopVendors.vue\";\n  import axios from \"axios\";\n  \n  export default {\n    components: {\n      TransactionList,\n      VipCustomers,\n      TopVendors\n    },\n    data() {\n      return {\n        address: \"\",\n        addressAlias: \"\",\n        incoming: null,\n        outgoing: \"\",\n        dataAmount: 0,\n        outgoingAmount: 0,\n      };\n    },\n    async created() {\n      // this.address = this.$route.params.addr;\n      console.log(this.$route.params.hash);\n      const payload1 = {\n        \"hash\": this.$route.params.hash\n      }\n      await axios.post('http://localhost:2011/txn/get-txn', payload1)\n        .then((response) => {\n          this.incoming = response.data[0];\n          this.outgoing = response.data[1];\n          console.log(response);\n        })\n        .catch((error) => { console.log(error); });\n  \n      for (let i = 0; i < this.incoming.length; i++) {\n        this.dataAmount += this.incoming[i].amount;\n      }\n      for (let i = 0; i < this.outgoing.length; i++) {\n        this.outgoingAmount += this.outgoing[i].amount;\n      }\n      const ii = this.incoming[1];\n      this.addressAlias = ii.receiverAlias || 'null';\n    }\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n  h3 {\n    width: 100%;\n    height: 3rem;\n    background-color: #3d008d;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: rgb(227, 215, 215);\n  }\n  </style>\n  \n  \n  "],"mappings":"AA6CA;AACA;AACA;AACE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVC,eAAe;IACfC,YAAY;IACZC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC;MACbC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC;IACpC,MAAMC,QAAO,GAAI;MACf,MAAM,EAAE,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC;IAC7B;IACA,MAAMjB,KAAK,CAACmB,IAAI,CAAC,mCAAmC,EAAED,QAAQ,EAC3DE,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACb,QAAO,GAAIa,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC;MAChC,IAAI,CAACI,QAAO,GAAIY,QAAQ,CAAChB,IAAI,CAAC,CAAC,CAAC;MAChCQ,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACvB,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;MAAEV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IAAE,CAAC,CAAC;IAE5C,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAChB,QAAQ,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,IAAI,CAACd,UAAS,IAAK,IAAI,CAACF,QAAQ,CAACgB,CAAC,CAAC,CAACE,MAAM;IAC5C;IACA,KAAK,IAAIF,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACf,QAAQ,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,IAAI,CAACb,cAAa,IAAK,IAAI,CAACF,QAAQ,CAACe,CAAC,CAAC,CAACE,MAAM;IAChD;IACA,MAAMC,EAAC,GAAI,IAAI,CAACnB,QAAQ,CAAC,CAAC,CAAC;IAC3B,IAAI,CAACD,YAAW,GAAIoB,EAAE,CAACC,aAAY,IAAK,MAAM;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
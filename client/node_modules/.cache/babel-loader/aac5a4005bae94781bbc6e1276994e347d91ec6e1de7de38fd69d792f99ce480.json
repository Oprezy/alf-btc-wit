{"ast":null,"code":"import axios from \"axios\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\nimport VendorView from \"../tronOrg/VendorView.vue\";\nexport default {\n  components: {\n    VendorView\n  },\n  props: [\"address\", \"totalOut\"],\n  data() {\n    return {\n      vendors: null\n    };\n  },\n  methods() {},\n  async created() {\n    // const supplierAddress = {\n    //   address: this.address,\n    // };\n    // const response = await AuthenticationService.getVendors(supplierAddress);\n    // const rawData = response[\"data\"].vendors;\n    // rawData.sort((a, b) => {\n    //   const amountA = parseInt(a.amount);\n    //   const amountB = parseInt(b.amount);\n\n    //   return amountB - amountA;\n    // });\n    // const data = rawData.splice(0, 10);\n\n    const response = await axios.get(\"http://localhost:1007/txns/vip\");\n    this.vendors = data;\n  }\n};","map":{"version":3,"names":["axios","AuthenticationService","VendorView","components","props","data","vendors","methods","created","response","get"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Done/Projects/Scraper/client/src/components/tronOrg/TopVendors.vue"],"sourcesContent":["<template>\n    <section>\n      <base-card>\n        <div><h3>Top Vendors!</h3></div>\n        <vendor-view\n          v-for=\"customer in vendors\"\n          :key=\"customer.address\"\n          :address=\"customer.address\"\n          :amount=\"customer.amount\"\n          :alias=\"customer.alias\"\n          :count=\"customer.count\"\n          :owner=\"address\"\n          :totalOut=\"totalOut\"\n        >\n        </vendor-view>\n      </base-card>\n    </section>\n  </template>\n  \n  \n  \n  <script>\n  import axios from \"axios\";\nimport AuthenticationService from \"../../services/AuthenticationService\";\n  import VendorView from \"../tronOrg/VendorView.vue\";\n  \n  export default {\n      components: {\n          VendorView\n      },\n    props: [\"address\", \"totalOut\"],\n    data() {\n      return {\n        vendors: null,\n      };\n    },\n    methods() {},\n    async created() {\n      // const supplierAddress = {\n      //   address: this.address,\n      // };\n      // const response = await AuthenticationService.getVendors(supplierAddress);\n      // const rawData = response[\"data\"].vendors;\n      // rawData.sort((a, b) => {\n      //   const amountA = parseInt(a.amount);\n      //   const amountB = parseInt(b.amount);\n  \n      //   return amountB - amountA;\n      // });\n      // const data = rawData.splice(0, 10);\n\n      const response = await axios.get(\"http://localhost:1007/txns/vip\");\n      this.vendors = data;\n    },\n  };\n  </script>"],"mappings":"AAsBE,OAAOA,KAAI,MAAO,OAAO;AAC3B,OAAOC,qBAAoB,MAAO,sCAAsC;AACtE,OAAOC,UAAS,MAAO,2BAA2B;AAElD,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EACHE,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EAC9BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC;IAClE,IAAI,CAACJ,OAAM,GAAID,IAAI;EACrB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
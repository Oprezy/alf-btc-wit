{"ast":null,"code":"export default {\n  data() {\n    return {\n      theOwner: null\n    };\n  },\n  props: [\"addressy\", \"amount\", \"alias\", \"owner\", \"count\", \"totalIn\"],\n  async created() {\n    const payload = {\n      address: this.owner\n    };\n    const addressOwner = await AuthenticationService.getAddressOwner(payload);\n    const data = addressOwner[\"data\"].owner;\n    this.theOwner = data[0];\n    // console.log(realOwner);\n  }\n};","map":{"version":3,"names":["data","theOwner","props","created","payload","address","owner","addressOwner","AuthenticationService","getAddressOwner"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipView.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card>\n      <p v-if=\"alias == 'null'\">\n        {{ addressy }} ({{ count }}) - <b>{{ amount }}</b> \n        <i>{{ Math.floor((amount / totalIn) * 100) }}%</i>\n      </p>\n      <p v-else>\n        {{ alias }} ({{ count }}) - <b>{{ amount }}</b>\n        <i>{{ Math.floor((amount / totalIn) * 100) }}%</i>\n      </p>\n    </base-card>\n  </section>\n</template>\n\n\n<script>\n\nexport default {\n    data() {\n        return {\n            theOwner: null,\n        }\n    },\n  props: [\"addressy\", \"amount\", \"alias\", \"owner\", \"count\", \"totalIn\"],\n  async created() {\n    const payload = {\n      address: this.owner,\n    };\n    const addressOwner = await AuthenticationService.getAddressOwner(payload);\n    const data = addressOwner[\"data\"].owner;\n    this.theOwner = data[0];\n    // console.log(realOwner);\n    \n  }\n};\n\n</script>"],"mappings":"AAkBA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACHC,KAAK,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC;EACnE,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,OAAM,GAAI;MACdC,OAAO,EAAE,IAAI,CAACC;IAChB,CAAC;IACD,MAAMC,YAAW,GAAI,MAAMC,qBAAqB,CAACC,eAAe,CAACL,OAAO,CAAC;IACzE,MAAMJ,IAAG,GAAIO,YAAY,CAAC,MAAM,CAAC,CAACD,KAAK;IACvC,IAAI,CAACL,QAAO,GAAID,IAAI,CAAC,CAAC,CAAC;IACvB;EAEF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
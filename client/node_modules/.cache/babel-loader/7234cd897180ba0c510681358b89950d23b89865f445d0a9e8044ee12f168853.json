{"ast":null,"code":"import axios from \"axios\";\n// import AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n  data() {\n    return {\n      allAddresses: null\n    };\n  },\n  computed: {\n    build() {\n      return \"https://tronscan.org/#/address/transfers\";\n    }\n  },\n  async created() {\n    const resp = await axios.get(\"http://localhost:1007/address\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `${localStorage.getItem(\"Authorization\")}`\n      }\n    });\n    const respData = resp.data;\n    this.allAddresses = respData;\n    await this.$store.dispatch(\"stats/saveAllAddresses\", {\n      ok: this.allAddresses\n    });\n  }\n};","map":{"version":3,"names":["axios","data","allAddresses","computed","build","created","resp","get","headers","Authorization","localStorage","getItem","respData","$store","dispatch","ok"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/tronOrg/AddressList.vue"],"sourcesContent":["<template>\n  <section>\n    <base-card>\n      <div><h3>List of All addresses!</h3></div>\n      <p v-for=\"address in allAddresses\" :key=\"address.address\">\n        <base-card>\n          <router-link :to=\"'/all/' + address['address']\">\n            <p v-if=\"address['owner']\">\n              <b>{{ address[\"owner\"] }}</b>\n            </p>\n            <p v-else>\n              {{ address[\"single\"] }}\n            </p>\n          </router-link>\n          <router-link :address=\"address\" :to=\"'/setowner/' + address.single\">\n            . (S.O)</router-link\n          >\n        </base-card>\n      </p>\n    </base-card>\n  </section>\n</template>\n\n\n<script>\nimport axios from \"axios\";\n// import AuthenticationService from \"../../services/AuthenticationService\";\n\n\nexport default {\n  data() {\n    return {\n      allAddresses: null,\n    };\n  },\n  computed: {\n    build() {\n      return \"https://tronscan.org/#/address/transfers\";\n    },\n  },\n  async created() {\n    const resp = await axios.get(\"http://localhost:1007/address\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `${localStorage.getItem(\"Authorization\")}`\n      }\n    });\n    const respData = resp.data;\n    this.allAddresses = respData\n\n    await this.$store.dispatch(\"stats/saveAllAddresses\", {\n      ok: this.allAddresses,\n    });\n  },\n};\n</script>\n\n\n<style>\nh3 {\n  width: 100%;\n  height: 3rem;\n  background-color: #3d008d;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(229, 223, 223);\n}\n</style>\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAO;AACzB;;AAGA,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,OAAO,0CAA0C;IACnD;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAG,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,+BAA+B,EAAE;MAC5DC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,GAAEC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAE;MAC1D;IACF,CAAC,CAAC;IACF,MAAMC,QAAO,GAAIN,IAAI,CAACL,IAAI;IAC1B,IAAI,CAACC,YAAW,GAAIU,QAAO;IAE3B,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,wBAAwB,EAAE;MACnDC,EAAE,EAAE,IAAI,CAACb;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
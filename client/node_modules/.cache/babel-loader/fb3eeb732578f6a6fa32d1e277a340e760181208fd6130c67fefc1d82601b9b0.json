{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import AuthenticationService from \"../../services/AuthenticationService\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedOption: '',\n      address: \"\",\n      owner: \"\",\n      options: null\n    };\n  },\n  methods: {\n    async registerAddress() {\n      const payload = {\n        \"address\": this.address,\n        \"owner\": this.owner,\n        \"categoryId\": this.selectedOption\n      };\n      console.log(payload);\n      await axios.post(\"http://localhost:1007/address/\", payload);\n      this.$router.push(`/all/${this.address}`);\n    }\n  },\n  watch: {\n    selectedOption() {\n      console.log(this.selectedOption);\n    }\n  },\n  async created() {\n    this.address = this.$route.params.addr;\n    const allCategories = await axios.get(\"http://localhost:1007/category/\");\n    console.log(allCategories.data);\n    const rawData = allCategories.data;\n    const getOptions = rawData.map(item => {\n      return {\n        \"label\": item.name,\n        \"value\": item.id\n      };\n    });\n    this.selectedOption = getOptions[0].value;\n    this.options = getOptions;\n  }\n};","map":{"version":3,"names":["axios","data","selectedOption","address","owner","options","methods","registerAddress","payload","console","log","post","$router","push","watch","created","$route","params","addr","allCategories","get","rawData","getOptions","map","item","name","id","value"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Done/Projects/Scraper/client/src/components/ComponentsRoutes/RegNewAddress.vue"],"sourcesContent":["<template>\n    <!-- <router-view></router-view> -->\n    <section>\n      <form @submit.prevent=\"registerAddress\">\n        <div class=\"form-control\">\n          <label for=\"address\">Address</label>\n          <input type=\"text\" name=\"address\" v-model=\"address\" />\n          <label for=\"address\">Owner</label>\n          <input type=\"text\" name=\"owner\" v-model=\"owner\" />\n        </div>\n  \n    <div>\n      <select v-model=\"selectedOption\">\n        <option v-for=\"option in options\" :key=\"option.value\" :value=\"option.value\">\n          {{ option.label }}\n        </option>\n      </select>\n    </div>\n    <br/>\n  \n  \n        <div>\n          <button>Save address</button>\n        </div>\n      </form>\n      <div>\n        <!-- <button @click=\"check\">check</button> -->\n        {{ address }}\n        {{ name }}\n      </div>\n    </section>\n  </template>\n  \n  \n  <script>\n  // import AuthenticationService from \"../../services/AuthenticationService\";\n  import axios from \"axios\";\n  \n  export default {\n    data() {\n      return {\n        selectedOption: '',\n        address: \"\",\n        owner: \"\",\n        options: null\n      };\n    },\n    methods: {\n      async registerAddress() {\n        const payload = {\n          \"address\": this.address,\n          \"owner\": this.owner,\n          \"categoryId\": this.selectedOption\n        };\n  \n        console.log(payload);\n        await axios.post(\"http://localhost:1007/address/\", payload)\n        this.$router.push(`/all/${this.address}`);\n      },\n    },\n    watch: {\n      selectedOption() {\n        console.log(this.selectedOption);\n      },\n    },\n    async created() {\n        this.address = this.$route.params.addr;\n      const allCategories = await axios.get(\"http://localhost:1007/category/\");\n      console.log(allCategories.data);\n      const rawData = allCategories.data;\n  \n      const getOptions = rawData.map((item) => {\n        return { \"label\" : item.name, \"value\": item.id }\n      })\n      this.selectedOption = getOptions[0].value;\n      this.options = getOptions;\n    }\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n  form {\n    margin: 1rem;\n    border: 1px solid #ccc;\n    border-radius: 12px;\n    padding: 1rem;\n  }\n  \n  .form-control {\n    margin: 0.5rem 0;\n  }\n  \n  label {\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    display: block;\n  }\n  \n  input,\n  textarea {\n    display: block;\n    width: 100%;\n    font: inherit;\n    border: 1px solid #ccc;\n    padding: 0.15rem;\n  }\n  \n  input:focus,\n  textarea:focus {\n    border-color: #3d008d;\n    background-color: #faf6ff;\n    outline: none;\n  }\n  \n  .errors {\n    font-weight: bold;\n    color: red;\n  }\n  \n  .actions {\n    text-align: center;\n  }\n  </style>\n  \n  "],"mappings":";AAmCE;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,MAAMC,OAAM,GAAI;QACd,SAAS,EAAE,IAAI,CAACL,OAAO;QACvB,OAAO,EAAE,IAAI,CAACC,KAAK;QACnB,YAAY,EAAE,IAAI,CAACF;MACrB,CAAC;MAEDO,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpB,MAAMR,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAEH,OAAO;MAC1D,IAAI,CAACI,OAAO,CAACC,IAAI,CAAE,QAAO,IAAI,CAACV,OAAQ,EAAC,CAAC;IAC3C;EACF,CAAC;EACDW,KAAK,EAAE;IACLZ,cAAcA,CAAA,EAAG;MACfO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,cAAc,CAAC;IAClC;EACF,CAAC;EACD,MAAMa,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACZ,OAAM,GAAI,IAAI,CAACa,MAAM,CAACC,MAAM,CAACC,IAAI;IACxC,MAAMC,aAAY,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,iCAAiC,CAAC;IACxEX,OAAO,CAACC,GAAG,CAACS,aAAa,CAAClB,IAAI,CAAC;IAC/B,MAAMoB,OAAM,GAAIF,aAAa,CAAClB,IAAI;IAElC,MAAMqB,UAAS,GAAID,OAAO,CAACE,GAAG,CAAEC,IAAI,IAAK;MACvC,OAAO;QAAE,OAAM,EAAIA,IAAI,CAACC,IAAI;QAAE,OAAO,EAAED,IAAI,CAACE;MAAG;IACjD,CAAC;IACD,IAAI,CAACxB,cAAa,GAAIoB,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK;IACzC,IAAI,CAACtB,OAAM,GAAIiB,UAAU;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import TransactionList from \"../tronOrg/TransactionList.vue\";\n// import VipCustomers from \"../tronOrg/VipCustomers.vue\";\n// import TopVendors from \"../tronOrg/TopVendors.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {},\n  data() {\n    return {\n      address: \"\",\n      addressAlias: \"\",\n      incoming: null,\n      outgoing: \"\",\n      dataAmount: 0,\n      outgoingAmount: 0\n    };\n  },\n  async created() {\n    const payload1 = {\n      \"address\": this.$route.params.address\n    };\n    await axios.post('http://localhost:2011/txn/fetch-address-hash', payload1).then(() => console.log('saving hashes...')).catch(error => console.log(error));\n\n    // await axios.post('http://localhost:2011/txn/address-txns', payload1)\n    //     .then((response) => {\n    //         this.incoming = response.data[0];\n    //         this.outgoing = response.data[1];\n    //         // console.log(response.data);\n    //         // console.log(this.incoming[0]);\n    //     })\n    //     .catch((error) => { console.log(error); });\n\n    await axios.post('http://localhost:2011/txn/grouped-address-txns', payload1).then(response => {\n      const incoming = response.data[0];\n      const outgoing = response.data[1];\n      this.incoming = incoming.map(item => {\n        return {\n          ...item,\n          readableDate: new Date(item.latest_timestamp * 1000).toLocaleString()\n        };\n      });\n      log(this.incoming);\n      this.outgoing = outgoing.map(item => {\n        return {\n          ...item,\n          readableDate: new Date(item.latest_timestamp * 1000).toLocaleString()\n        };\n      });\n      console.log(this.incoming);\n    });\n  }\n};","map":{"version":3,"names":["axios","components","data","address","addressAlias","incoming","outgoing","dataAmount","outgoingAmount","created","payload1","$route","params","post","then","console","log","catch","error","response","map","item","readableDate","Date","latest_timestamp","toLocaleString"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/BTC/AddressView.vue"],"sourcesContent":["<template>\n    <!-- <section>\n        <base-card>\n            <h3>Stats</h3>\n            <p><b>In/Out:</b> {{ dataAmount.toLocaleString() }} / {{ outgoingAmount.toLocaleString() }}</p>\n        </base-card>\n\n        <top-vendors :address=\"address\" :totalOut=\"outgoingAmount\"></top-vendors>\n        <vip-customers :address=\"address\" :totalIn=\"dataAmount\"></vip-customers>\n    </section> -->\n\n    <section>\n        <div v-if=\"outgoing\">\n            <base-card>\n                <h3>Outgoing $Coins</h3>\n                <div :v-for=\"transaction in outgoing\">\n                    <!-- {{ transaction.txn_address }} - {{ transaction.txn_amount }} -->\n                </div>\n            </base-card>\n        </div>\n    </section>\n\n    <section>\n        <div v-if=\"incoming\">\n            <base-card>\n                <h3>Incoming $Coins</h3>\n                <div v-for=\"transaction in incoming\" :key=\"transaction.txn_unique\">\n                    <router-link :to=\"/hash/ + transaction.hash\">{{ transaction.hash }}</router-link>\n                    - {{ transaction.txn_amount }} - {{ transaction.latest_timestamp }}\n\n                </div>\n            </base-card>\n        </div>\n    </section>\n\n    <section />\n</template>\n  \n  \n<script>\n// import TransactionList from \"../tronOrg/TransactionList.vue\";\n// import VipCustomers from \"../tronOrg/VipCustomers.vue\";\n// import TopVendors from \"../tronOrg/TopVendors.vue\";\nimport axios from \"axios\";\n\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            address: \"\",\n            addressAlias: \"\",\n            incoming: null,\n            outgoing: \"\",\n            dataAmount: 0,\n            outgoingAmount: 0,\n        };\n    },\n    async created() {\n        const payload1 = {\n            \"address\": this.$route.params.address\n        }\n\n        await axios.post('http://localhost:2011/txn/fetch-address-hash', payload1)\n            .then(() => console.log('saving hashes...'))\n            .catch((error) => console.log(error));\n\n        // await axios.post('http://localhost:2011/txn/address-txns', payload1)\n        //     .then((response) => {\n        //         this.incoming = response.data[0];\n        //         this.outgoing = response.data[1];\n        //         // console.log(response.data);\n        //         // console.log(this.incoming[0]);\n        //     })\n        //     .catch((error) => { console.log(error); });\n\n        await axios.post('http://localhost:2011/txn/grouped-address-txns', payload1)\n            .then((response) => {\n                const incoming = response.data[0];\n                const outgoing = response.data[1];\n\n                this.incoming = incoming.map((item) => {\n                    return {\n                        ...item,\n                        readableDate: new Date(item.latest_timestamp * 1000).toLocaleString()\n                    }\n                })\n                log(this.incoming);\n                this.outgoing = outgoing.map((item) => {\n                    return {\n                        ...item,\n                        readableDate: new Date(item.latest_timestamp * 1000).toLocaleString()\n                    }\n                })\n                console.log(this.incoming);\n            })\n    }\n};\n</script>\n  \n  \n  \n<style scoped>\nh3 {\n    width: 100%;\n    height: 3rem;\n    background-color: #3d008d;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: rgb(227, 215, 215);\n}\n</style>\n  \n  "],"mappings":"AAwCA;AACA;AACA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC;MACbC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAMC,QAAO,GAAI;MACb,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACT;IAClC;IAEA,MAAMH,KAAK,CAACa,IAAI,CAAC,8CAA8C,EAAEH,QAAQ,EACpEI,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAC1CC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;;IAEzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMlB,KAAK,CAACa,IAAI,CAAC,gDAAgD,EAAEH,QAAQ,EACtEI,IAAI,CAAEK,QAAQ,IAAK;MAChB,MAAMd,QAAO,GAAIc,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAC;MACjC,MAAMI,QAAO,GAAIa,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAC;MAEjC,IAAI,CAACG,QAAO,GAAIA,QAAQ,CAACe,GAAG,CAAEC,IAAI,IAAK;QACnC,OAAO;UACH,GAAGA,IAAI;UACPC,YAAY,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,gBAAe,GAAI,IAAI,CAAC,CAACC,cAAc,CAAC;QACxE;MACJ,CAAC;MACDT,GAAG,CAAC,IAAI,CAACX,QAAQ,CAAC;MAClB,IAAI,CAACC,QAAO,GAAIA,QAAQ,CAACc,GAAG,CAAEC,IAAI,IAAK;QACnC,OAAO;UACH,GAAGA,IAAI;UACPC,YAAY,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,gBAAe,GAAI,IAAI,CAAC,CAACC,cAAc,CAAC;QACxE;MACJ,CAAC;MACDV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,QAAQ,CAAC;IAC9B,CAAC;EACT;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
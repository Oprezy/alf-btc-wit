{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-22f3e1de\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Exchange Stats\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [$data.stats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stats, exchange => {\n      return _openBlock(), _createElementBlock(\"div\");\n    }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_base_card","$data","stats","_hoisted_2","_Fragment","_renderList","exchange"],"sources":["/Users/prezzy/Documents/prezziy/Dev/Learn/btc_scraper_2/btc_scraper_2/client/src/components/BTC/ExchangeStats.vue"],"sourcesContent":["<template>\n    <section>\n        <div>\n            <h3>Exchange Stats</h3>\n        </div>\n        <base-card>\n            <div v-if=\"stats\">\n\n                <div v-for=\"exchange in stats\">\n\n                </div>\n            </div>\n        </base-card>\n    </section>\n</template>\n  \n  \n<script>\nimport axios from \"axios\";\n\nexport default {\n    components: {\n    },\n    data() {\n        return {\n            stats: null,\n            address: \"\",\n            addressAlias: \"\",\n            incoming: null,\n            outgoing: \"\",\n            dataAmount: 0,\n            outgoingAmount: 0,\n        };\n    },\n    async created() {\n        const payload1 = {\n            \"address\": this.$route.params.address\n        }\n        await axios.get('http://localhost:2011/txn/exchange-stats', payload1)\n            .then((response) => {\n                this.stats = response.data;\n                console.log(response.data);\n            })\n            .catch((error) => { console.log(error); });\n    }\n};\n</script>\n  \n  \n  \n<style scoped>\nh3 {\n    width: 100%;\n    height: 3rem;\n    background-color: #3d008d;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: rgb(227, 215, 215);\n}\n</style>\n  \n  "],"mappings":";;gEAEQA,mBAAA,CAEM,c,aADFA,mBAAA,CAAuB,YAAnB,gBAAc,E;;;;;;uBAF1BC,mBAAA,CAYU,kBAXNC,UAEM,EACNC,YAAA,CAOYC,oBAAA;sBANR,MAKM,CALKC,KAAA,CAAAC,KAAK,I,cAAhBL,mBAAA,CAKM,OAAAM,UAAA,I,kBAHFN,mBAAA,CAEMO,SAAA,QAAAC,WAAA,CAFkBJ,KAAA,CAAAC,KAAK,EAAjBI,QAAQ;2BAApBT,mBAAA,CAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
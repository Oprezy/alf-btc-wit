{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"List of VIP Customers!\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.vipCustomers, customer => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: customer.address\n      }, [_createVNode(_component_base_card, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(customer.alias) + \" (\" + _toDisplayString(customer.count) + \") - $\" + _toDisplayString(customer.amount), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <p v-for=\\\"address in allAddresses\\\" :key=\\\"address\\\">\\n        <base-card>\\n          <router-link :to=\\\"'/all/' + address['single']\\\">\\n            <p v-if=\\\"address['owner']\\\">\\n              <b>{{ address[\\\"owner\\\"] }}</b>\\n            </p>\\n            <p v-else>\\n              {{ address[\\\"single\\\"] }}\\n            </p>\\n          </router-link>\\n          <router-link :address=\\\"address\\\" :to=\\\"'/setowner/' + address.single\\\">\\n            . (S.O)</router-link\\n          >\\n        </base-card>\\n      </p> \")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_base_card","_hoisted_1","_Fragment","_renderList","_ctx","vipCustomers","customer","key","address","alias","_toDisplayString","count","amount","_createCommentVNode"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipCustomers.vue"],"sourcesContent":["<template>\n    <section>\n        <base-card>\n      <div><h3>List of VIP Customers!</h3></div>\n      <div v-for=\"customer in vipCustomers\" :key=\"customer.address\">\n    <base-card>{{ customer.alias }} ({{ customer.count }}) - ${{ customer.amount }}</base-card>\n    </div>\n      <!-- <p v-for=\"address in allAddresses\" :key=\"address\">\n        <base-card>\n          <router-link :to=\"'/all/' + address['single']\">\n            <p v-if=\"address['owner']\">\n              <b>{{ address[\"owner\"] }}</b>\n            </p>\n            <p v-else>\n              {{ address[\"single\"] }}\n            </p>\n          </router-link>\n          <router-link :address=\"address\" :to=\"'/setowner/' + address.single\">\n            . (S.O)</router-link\n          >\n        </base-card>\n      </p> -->\n    </base-card>\n    </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n\nexport default {\n    props: ['address'],\n    data() {\n        return {\n            vipCustomers: null,\n        }\n    },\n    methods() {\n\n    },\n    async created() {\n        console.log(this.address, 'address');\n        const payload = {\n            address: this.address\n        }\n        const response = await AuthenticationService.getVipCustomers(payload);\n        this.vipCustomers = response['data'].customers;\n        const datathis.vipCustomers;\n \n    },\n}\n</script>"],"mappings":";gCAGMA,mBAAA,CAA0C,c,aAArCA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;;;uBAFjCC,mBAAA,CAsBU,kBArBNC,YAAA,CAoBQC,oBAAA;sBAnBV,MAA0C,CAA1CC,UAA0C,G,kBAC1CH,mBAAA,CAEII,SAAA,QAAAC,WAAA,CAFoBC,IAAA,CAAAC,YAAY,EAAxBC,QAAQ;2BAApBR,mBAAA,CAEI;QAFmCS,GAAG,EAAED,QAAQ,CAACE;UACvDT,YAAA,CAA2FC,oBAAA;0BAAhF,MAAoB,C,kCAAjBM,QAAQ,CAACG,KAAK,IAAG,IAAE,GAAAC,gBAAA,CAAGJ,QAAQ,CAACK,KAAK,IAAG,OAAK,GAAAD,gBAAA,CAAGJ,QAAQ,CAACM,MAAM,iB;;;;oCAE1EC,mBAAA,4gBAcQ,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
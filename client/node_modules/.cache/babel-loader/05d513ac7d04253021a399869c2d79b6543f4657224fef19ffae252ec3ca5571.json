{"ast":null,"code":"import AuthenticationService from \"../../services/AuthenticationService\";\nexport default {\n  props: ['address'],\n  data() {\n    return {\n      vipCustomers: null\n    };\n  },\n  methods() {},\n  async created() {\n    console.log(this.address, 'address');\n    const payload = {\n      address: this.address\n    };\n    const response = await AuthenticationService.getVipCustomers(payload);\n    this.vipCustomers = response['data'].customers;\n    const data = this.vipCustomers;\n    data.sort((a, b) => {\n      const amountA = parseInt(a.amount);\n      const amountB = parseInt(b.amount);\n      return amountA - amountB;\n    });\n  }\n};","map":{"version":3,"names":["AuthenticationService","props","data","vipCustomers","methods","created","console","log","address","payload","response","getVipCustomers","customers","sort","a","b","amountA","parseInt","amount","amountB"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipCustomers.vue"],"sourcesContent":["<template>\n    <section>\n        <base-card>\n      <div><h3>List of VIP Customers!</h3></div>\n      <div v-for=\"customer in vipCustomers\" :key=\"customer.address\">\n    <base-card>{{ customer.alias }} ({{ customer.count }}) - ${{ customer.amount }}</base-card>\n    </div>\n      <!-- <p v-for=\"address in allAddresses\" :key=\"address\">\n        <base-card>\n          <router-link :to=\"'/all/' + address['single']\">\n            <p v-if=\"address['owner']\">\n              <b>{{ address[\"owner\"] }}</b>\n            </p>\n            <p v-else>\n              {{ address[\"single\"] }}\n            </p>\n          </router-link>\n          <router-link :address=\"address\" :to=\"'/setowner/' + address.single\">\n            . (S.O)</router-link\n          >\n        </base-card>\n      </p> -->\n    </base-card>\n    </section>\n</template>\n\n\n\n<script>\nimport AuthenticationService from \"../../services/AuthenticationService\";\n\n\nexport default {\n    props: ['address'],\n    data() {\n        return {\n            vipCustomers: null,\n        }\n    },\n    methods() {\n\n    },\n    async created() {\n        console.log(this.address, 'address');\n        const payload = {\n            address: this.address\n        }\n        const response = await AuthenticationService.getVipCustomers(payload);\n        this.vipCustomers = response['data'].customers;\n        const data = this.vipCustomers;\n        data.sort((a, b) => {\n  const amountA = parseInt(a.amount);\n  const amountB = parseInt(b.amount);\n\n  return amountA - amountB;\n});\n \n    },\n}\n</script>"],"mappings":"AA6BA,OAAOA,qBAAoB,MAAO,sCAAsC;AAGxE,eAAe;EACXC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG,CAEV,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;IACpC,MAAMC,OAAM,GAAI;MACZD,OAAO,EAAE,IAAI,CAACA;IAClB;IACA,MAAME,QAAO,GAAI,MAAMV,qBAAqB,CAACW,eAAe,CAACF,OAAO,CAAC;IACrE,IAAI,CAACN,YAAW,GAAIO,QAAQ,CAAC,MAAM,CAAC,CAACE,SAAS;IAC9C,MAAMV,IAAG,GAAI,IAAI,CAACC,YAAY;IAC9BD,IAAI,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC1B,MAAMC,OAAM,GAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;MAClC,MAAMC,OAAM,GAAIF,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC;MAElC,OAAOF,OAAM,GAAIG,OAAO;IAC1B,CAAC,CAAC;EAEE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
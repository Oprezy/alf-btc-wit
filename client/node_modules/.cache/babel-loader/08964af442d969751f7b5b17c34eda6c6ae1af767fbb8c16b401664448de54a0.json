{"ast":null,"code":"// import AuthenticationService from \"../../services/AuthenticationService\";\n\nexport default {\n  props: ['address'],\n  data() {\n    return {\n      vipCustomers: null\n    };\n  },\n  methods() {},\n  created() {\n    console.log(this.address, 'address');\n\n    // const response = AuthenticationService.getVipCustomers(this.address);\n    // this.vipCustomers = response['data'];\n    // console.log(this.vipCustomers);\n  }\n};","map":{"version":3,"names":["props","data","vipCustomers","methods","created","console","log","address"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/VipCustomers.vue"],"sourcesContent":["<template>\n    <section>\n        <base-card>\n      <div><h3>List of VIP Customers!</h3></div>\n      <!-- {{ address }} -->\n      <!-- <p v-for=\"address in allAddresses\" :key=\"address\">\n        <base-card>\n          <router-link :to=\"'/all/' + address['single']\">\n            <p v-if=\"address['owner']\">\n              <b>{{ address[\"owner\"] }}</b>\n            </p>\n            <p v-else>\n              {{ address[\"single\"] }}\n            </p>\n          </router-link>\n          <router-link :address=\"address\" :to=\"'/setowner/' + address.single\">\n            . (S.O)</router-link\n          >\n        </base-card>\n      </p> -->\n    </base-card>\n    </section>\n</template>\n\n\n\n<script>\n// import AuthenticationService from \"../../services/AuthenticationService\";\n\n\nexport default {\n    props: ['address'],\n    data() {\n        return {\n            vipCustomers: null,\n        }\n    },\n    methods() {\n\n    },\n    created() {\n        console.log(this.address, 'address');\n        \n        // const response = AuthenticationService.getVipCustomers(this.address);\n        // this.vipCustomers = response['data'];\n        // console.log(this.vipCustomers);\n\n    },\n}\n</script>"],"mappings":"AA2BA;;AAGA,eAAe;EACXA,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG,CAEV,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;;IAEpC;IACA;IACA;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
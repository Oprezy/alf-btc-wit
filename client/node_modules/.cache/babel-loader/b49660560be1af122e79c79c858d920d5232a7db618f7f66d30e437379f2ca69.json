{"ast":null,"code":"import TransactionList from \"../tronOrg/TransactionList.vue\";\nexport default {\n  components: {\n    TransactionList\n  },\n  data() {\n    return {\n      address: \"\",\n      data: null,\n      dataAmount: 0,\n      outgoing: \"\",\n      outgoingAmount: 0\n    };\n  },\n  async created() {\n    this.address = this.$route.params.addr;\n    this.$store.dispatch(\"stats/saveAddress\", this.address);\n    const temp = await this.$store.dispatch(\"stats/getStats\");\n    this.$store.commit(\"stats/saveData\", temp);\n    console.log(\"ok\");\n    const both = this.$store.getters[\"stats/getAddressData\"];\n    this.data = both[0];\n    this.outgoing = both[1];\n    console.log(this.data);\n    for (let i = 0; i < this.data.length; i++) {\n      // console.log(this.data[i].amount);\n      this.dataAmount += this.data[i].amount;\n    }\n    for (let i = 0; i < this.outgoing.length; i++) {\n      // console.log(this.data[i].amount);\n      this.outgoingAmount += this.outgoing[i].amount;\n    }\n  }\n};","map":{"version":3,"names":["TransactionList","components","data","address","dataAmount","outgoing","outgoingAmount","created","$route","params","addr","$store","dispatch","temp","commit","console","log","both","getters","i","length","amount"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/ComponentsRoutes/AddressView.vue"],"sourcesContent":["<template>\n  <section>\n    <h3>Details: {{ address }}</h3>\n  </section>\n\n  <section>\n    <h3>Stats</h3>\n    <p>Incoming: {{ dataAmount }}</p>\n    <p>Incoming: {{ out }}</p>\n  </section>\n\n  <section>\n    <div v-if=\"data\">\n      <base-card>\n        <h3>Outgoing $Coins</h3>\n        <transaction-list\n          v-for=\"transaction in outgoing\"\n          :key=\"transaction.hash\"\n          :from=\"transaction.from\"\n          :to=\"transaction.to\"\n          :amount=\"transaction.amount\"\n          :hash=\"transaction.hash\"\n          :time=\"transaction.time\"\n        ></transaction-list>\n      </base-card>\n    </div>\n  </section>\n\n  <section>\n    <div v-if=\"data\">\n      <base-card>\n        <h3>Incoming $Coins</h3>\n        <transaction-list\n          v-for=\"transaction in data\"\n          :key=\"transaction.hash\"\n          :from=\"transaction.from\"\n          :to=\"transaction.to\"\n          :amount=\"transaction.amount\"\n          :hash=\"transaction.hash\"\n          :time=\"transaction.time\"\n        ></transaction-list>\n      </base-card>\n    </div>\n  </section>\n\n  <section />\n</template>\n\n\n<script>\nimport TransactionList from \"../tronOrg/TransactionList.vue\";\n\nexport default {\n  components: {\n    TransactionList,\n  },\n  data() {\n    return {\n      address: \"\",\n      data: null,\n      dataAmount: 0,\n      outgoing: \"\",\n      outgoingAmount: 0,\n    };\n  },\n  async created() {\n    this.address = this.$route.params.addr;\n\n    this.$store.dispatch(\"stats/saveAddress\", this.address);\n    const temp = await this.$store.dispatch(\"stats/getStats\");\n    this.$store.commit(\"stats/saveData\", temp);\n    console.log(\"ok\");\n\n    const both = this.$store.getters[\"stats/getAddressData\"];\n    this.data = both[0];\n    this.outgoing = both[1];\n    console.log(this.data);\n\n\n    for (let i = 0; i < this.data.length; i++) {\n      // console.log(this.data[i].amount);\n      this.dataAmount += this.data[i].amount;\n    }\n    for (let i = 0; i < this.outgoing.length; i++) {\n      // console.log(this.data[i].amount);\n      this.outgoingAmount += this.outgoing[i].amount;\n    }\n    \n    \n  },\n};\n</script>\n\n\n\n<style scoped>\nh3 {\n  width: 100%;\n  height: 3rem;\n  background-color: #3d008d;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(227, 215, 215);\n}\n</style>\n\n\n\n\n\n\n<!-- data() {\n    return {\n      address: \"\",\n      data: null,\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$store.dispatch(\"stats/saveAddress\", this.address);\n      const temp = await this.$store.dispatch(\"stats/getStats\");\n      this.$store.commit(\"stats/saveData\", temp);\n      console.log(\"ok\");\n      this.data = this.$store.getters[\"stats/getAddressData\"];\n    }, -->"],"mappings":"AAkDA,OAAOA,eAAc,MAAO,gCAAgC;AAE5D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXD,IAAI,EAAE,IAAI;MACVE,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACJ,OAAM,GAAI,IAAI,CAACK,MAAM,CAACC,MAAM,CAACC,IAAI;IAEtC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAACT,OAAO,CAAC;IACvD,MAAMU,IAAG,GAAI,MAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC;IACzD,IAAI,CAACD,MAAM,CAACG,MAAM,CAAC,gBAAgB,EAAED,IAAI,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IAEjB,MAAMC,IAAG,GAAI,IAAI,CAACN,MAAM,CAACO,OAAO,CAAC,sBAAsB,CAAC;IACxD,IAAI,CAAChB,IAAG,GAAIe,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,CAACZ,QAAO,GAAIY,IAAI,CAAC,CAAC,CAAC;IACvBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,IAAI,CAAC;IAGtB,KAAK,IAAIiB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACjB,IAAI,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC;MACA,IAAI,CAACf,UAAS,IAAK,IAAI,CAACF,IAAI,CAACiB,CAAC,CAAC,CAACE,MAAM;IACxC;IACA,KAAK,IAAIF,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACd,QAAQ,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C;MACA,IAAI,CAACb,cAAa,IAAK,IAAI,CAACD,QAAQ,CAACc,CAAC,CAAC,CAACE,MAAM;IAChD;EAGF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
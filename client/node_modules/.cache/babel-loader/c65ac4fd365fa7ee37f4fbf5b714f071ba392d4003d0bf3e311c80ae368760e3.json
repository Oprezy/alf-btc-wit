{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"List of VIP Customers!\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vip_view = _resolveComponent(\"vip-view\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.vendors, customer => {\n      return _openBlock(), _createBlock(_component_vip_view, {\n        key: customer.address,\n        address: customer.address,\n        amount: customer.amount,\n        alias: customer.alias,\n        count: customer.count,\n        owner: $props.address,\n        totalIn: _ctx.totalIn\n      }, null, 8 /* PROPS */, [\"address\", \"amount\", \"alias\", \"count\", \"owner\", \"totalIn\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_base_card","_hoisted_1","_Fragment","_renderList","$data","vendors","customer","_createBlock","_component_vip_view","key","address","amount","alias","count","owner","$props","totalIn","_ctx"],"sources":["/Users/cryptoprezzy/Desktop/Development/real/TRON Scraper/client/src/components/tronOrg/TopVendors.vue"],"sourcesContent":["<template>\n    <section>\n      <base-card>\n        <div><h3>List of VIP Customers!</h3></div>\n        <vip-view\n          v-for=\"customer in vendors\"\n          :key=\"customer.address\"\n          :address=\"customer.address\"\n          :amount=\"customer.amount\"\n          :alias=\"customer.alias\"\n          :count=\"customer.count\"\n          :owner=\"address\"\n          :totalIn=\"totalIn\"\n        >\n        </vip-view>\n      </base-card>\n    </section>\n  </template>\n  \n  \n  \n  <script>\n  import AuthenticationService from \"../../services/AuthenticationService\";\n  import VipView from \"../tronOrg/VipView.vue\";\n  \n  export default {\n      components: {\n          VipView\n      },\n    props: [\"address\", \"totalOut\"],\n    data() {\n      return {\n        vendors: null,\n      };\n    },\n    methods() {},\n    async created() {\n      const supplierAddress = {\n        address: this.address,\n      };\n      const response = await AuthenticationService.getVendors(payload);\n      const rawData = response[\"data\"].vendors;\n      rawData.sort((a, b) => {\n        const amountA = parseInt(a.amount);\n        const amountB = parseInt(b.amount);\n  \n        return amountB - amountA;\n      });\n      const data = rawData.splice(0, 10);\n      this.vendors = data;\n    },\n  };\n  </script>"],"mappings":";gCAGQA,mBAAA,CAA0C,c,aAArCA,mBAAA,CAA+B,YAA3B,wBAAsB,E;;;;;uBAFnCC,mBAAA,CAeU,kBAdRC,YAAA,CAaYC,oBAAA;sBAZV,MAA0C,CAA1CC,UAA0C,G,kBAC1CH,mBAAA,CAUWI,SAAA,QAAAC,WAAA,CATUC,KAAA,CAAAC,OAAO,EAAnBC,QAAQ;2BADjBC,YAAA,CAUWC,mBAAA;QARRC,GAAG,EAAEH,QAAQ,CAACI,OAAO;QACrBA,OAAO,EAAEJ,QAAQ,CAACI,OAAO;QACzBC,MAAM,EAAEL,QAAQ,CAACK,MAAM;QACvBC,KAAK,EAAEN,QAAQ,CAACM,KAAK;QACrBC,KAAK,EAAEP,QAAQ,CAACO,KAAK;QACrBC,KAAK,EAAEC,MAAA,CAAAL,OAAO;QACdM,OAAO,EAAEC,IAAA,CAAAD"},"metadata":{},"sourceType":"module","externalDependencies":[]}